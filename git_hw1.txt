JSON
 4. Создать внешний репозиторий c названием JSON. +
 5. Клонировать репозиторий JSON на локальный компьютер. --  git clone https://github.com/Alxndrpz/JSON.git
 6. Внутри локального JSON создать файл “new.json”. -- touch new.json
 7. Добавить файл под гит. -- git add new.json
 8. Закоммитить файл. -- git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий. -- git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных). Всё написать в формате JSON.
cat >> new.json
{
  "first_name" : "Alexandra",
  "last_name" : "Poznyak",
  "age" : 19,
   "pets" : 1
}
 11. Отправить изменения на внешний репозиторий. -- git add new.json --- git commit –m “add new.json” --- git push
 12. Создать файл preferences.json -- vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
{ 
	"movie" : "Harry Potter",
	"series" : "Game of Thrones",
	"food" : "sushi",
	"season" : "summer",
	"country" : "Mexico"
}
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
{
	"first" : "Postman",
	"second" : "Test Documentation",
	"third" : "Chrome DevTools",
	"forth" : "Charles Proxy",
	"fifth" : "SQL"
}
 15. Отправить сразу 2 файла на внешний репозиторий. -- git add preferences.json --- git commit –m “add skills.json” --- git push
 16. На веб интерфейсе создать файл bug_report.json. +
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. +
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 20. Синхронизировать внешний и локальный репозиторий JSON -- git pull

XML
 21. Создать внешний репозиторий c названием XML. +
 22. Клонировать репозиторий XML на локальный компьютер. -- git clone git@github.com:Alxndrpz/xml.git 
 23. Внутри локального XML создать файл “new.xml”. -- touch new.xml
 24. Добавить файл под гит. -- git add new.xml
 25. Закоммитить файл. -- git commit –am “new fiile”
 26. Отправить файл на внешний GitHub репозиторий. -- git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<information>
	<full_name>Poznyak Alexandra</full_name>
	<age>19</age>
	<number_of_pets>1 cat</number_of_pets>
	<expected_salary>600</expected_salary>
</information>
 28. Отправить изменения на внешний репозиторий. -- git add new.xml --- git commit –am “add xml” --- git push
 29. Создать файл preferences.xml -- vim preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<preferences>
        <favorite_movie>Gone Girl</favorite_movie>
        <favorite_series>Game of Thrones</favorite_services>
        <favorite_food>Sushi</favorite_food>
        <favorite_season>Summer</favorite_season>
        <country>Mexico</country>
</preferences>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
<skills>
	<first>Postman</first>
	<second>Test documentation</second>
	<third>chrome devtools</third>
	<forth>charles proxy</forth>
	<fifth>sql</fifth>
</skills>
 32. Сделать коммит в одну строку. -- git add preferences.xml skills.xml --- git commit –m””
 33. Отправить сразу 2 файла на внешний репозиторий. -- git push
 34. На веб интерфейсе создать файл bug_report.xml. +
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. +
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 38. Синхронизировать внешний и локальный репозиторий XML -- git pull

TXT
 1. Создать внешний репозиторий c названием TXT. +
 2. Клонировать репозиторий TXT на локальный компьютер. -- git clone git@github.com:Alxndrpz/txt.git
 3. Внутри локального TXT создать файл “new.txt”. -- touch new.txt
 4. Добавить файл под гит. -- git add new.txt
 5. Закоммитить файл. -- git commit –m “”
 6. Отправить файл на внешний GitHub репозиторий. -- git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. +
8. Отправить изменения на внешний репозиторий. -- git commit –am “” -- git push
 9. Создать файл preferences.txt -- vim preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. +
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT +
 12. Сделать коммит в одну строку. -- git commit –m “add preferences.txt, skills.txt”
 13. Отправить сразу 2 файла на внешний репозиторий. -- git push
 14. На веб интерфейсе создать файл bug_report.txt. +
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT +
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 18. Синхронизировать внешний и локальный репозиторий TXT -- git pull
